var N = null;var searchIndex = {};
searchIndex["pwbox"]={"doc":"Password-based encryption and decryption for Rust.","items":[[3,"CipherWithMac","pwbox","Authenticated cipher constructed from an ordinary symmetric cipher and a MAC construction.",N,N],[3,"ErasedPwBox","","Password-encrypted box suitable for (de)serialization.",N,N],[3,"Eraser","","Helper structure to convert password-encrypted boxes to a serializable format and back.",N,N],[3,"CipherOutput","","Output of a `Cipher`.",N,N],[12,"ciphertext","","Encrypted data. Has the same size as the original data.",0,N],[12,"mac","","Message authentication code for the `ciphertext`.",0,N],[3,"SensitiveData","","Container for data obtained after opening a `PwBox`.",N,N],[3,"PwBox","","Password-encrypted data.",N,N],[3,"RestoredPwBox","","Password-encrypted box restored after deserialization.",N,N],[3,"PwBoxBuilder","","Builder for `PwBox`es.",N,N],[4,"EraseError","","Errors occurring during erasing a `PwBox`.",N,N],[13,"NoKdf","","KDF used in the box is not registered with the `Eraser`.",1,N],[13,"NoCipher","","Cipher used in the box is not registered with the `Eraser`.",1,N],[13,"SerializeKdf","","Error serializing KDF params.",1,N],[4,"Error","","Errors occurring during `PwBox` operations.",N,N],[13,"NoCipher","","A cipher with the specified name is not registered.",2,N],[13,"NoKdf","","A key derivation function with the specified name is not registered.",2,N],[13,"KdfParams","","Failed to parse KDF parameters.",2,N],[13,"NonceLen","","Incorrect nonce length encountered.",2,N],[13,"MacLen","","Incorrect MAC length encountered.",2,N],[13,"SaltLen","","Incorrect salt length encountered.",2,N],[13,"MacMismatch","","Failed to verify MAC code.",2,N],[13,"DeriveKey","","Error during KDF invocation.",2,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"seal","","Works as follows:",3,N],[11,"open","","Works as follows:",3,N],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["erasedpwbox"]]],[11,"len","","Returns the byte size of the encrypted data stored in this box.",4,[[["self"]],["usize"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"default","","",5,[[],["self"]]],[11,"new","","Creates an `Eraser` with no ciphers or KDFs.",5,[[],["self"]]],[11,"add_cipher","","Adds a cipher.",5,[[["self"],["str"]],["self"]]],[11,"add_kdf","","Adds a key derivation function.",5,[[["self"],["str"]],["self"]]],[11,"add_suite","","Adds all KDFs and ciphers from the specified `Suite`.",5,[[["self"]],["self"]]],[11,"erase","","Converts a `pwbox` into serializable form.",5,[[["self"],["pwbox"]],["result",["erasedpwbox","eraseerror"]]]],[11,"restore","","Restores a `PwBox` from the serialized form.",5,[[["self"],["erasedpwbox"]],["result",["restoredpwbox","error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["cipheroutput"]]],[11,"clone","","",6,[[["self"]],["sensitivedata"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"deref","","",6,N],[11,"drop","","",6,[[["self"]]]],[0,"rcrypto","","`rust-crypto` cryptographic backend.",N,N],[3,"Scrypt","pwbox::rcrypto","`Scrypt` key derivation function parameterized as per the original paper.",N,N],[3,"Aes128Gcm","","AES-128 cipher in GCM mode.",N,N],[4,"Aes128Ctr","","AES-128 cipher in CTR mode.",N,N],[4,"Keccak256","","MAC construction based on Keccak256 hash function.",N,N],[4,"RustCrypto","","Suite for password-based encryption provided by `rust-crypto`.",N,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"seal_or_open","","",7,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"digest","","",8,N],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["scrypt"]]],[11,"default","","Returns the \"interactive\" `scrypt` parameters as defined in libsodium.",9,[[],["self"]]],[11,"light","","Returns \"light\" `scrypt` parameters as used in Ethereum keystore implementations.",9,[[],["self"]]],[11,"custom","","Creates custom parameters for scrypt KDF.",9,[[["u8"],["u32"]],["self"]]],[11,"salt_len","","",9,[[["self"]],["usize"]]],[11,"derive_key","","",9,N],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["aes128gcm"]]],[11,"default","","",10,[[],["aes128gcm"]]],[11,"seal","","",10,N],[11,"open","","",10,N],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"add_ciphers_and_kdfs","","",11,[[["eraser"]]]],[0,"sodium","pwbox","Crypto primitives based on `libsodium`.",N,N],[3,"Scrypt","pwbox::sodium","`Scrypt` key derivation function parameterized as per libsodium, i.e., via `opslimit` (computational hardness) and `memlimit` (RAM consumption).",N,N],[12,"opslimit","","Parameter determining the computational hardness of the KDF.",12,N],[12,"memlimit","","Parameter determining the RAM consumption of the KDF. The value is approximately equal to RAM volume in bytes, so, for example, the default value means memory consumption ~16 MB.",12,N],[3,"XSalsa20Poly1305","","`xsalsa20` symmetric cipher with `poly1305` MAC.",N,N],[4,"Sodium","","Suite for password-based encryption provided by `libsodium`.",N,N],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["scrypt"]]],[11,"default","","Returns the \"interactive\" `scrypt` parameters as defined in libsodium.",12,[[],["self"]]],[11,"light","","Returns \"light\" `scrypt` parameters as used in Ethereum keystore implementations.",12,[[],["self"]]],[11,"salt_len","","",12,[[["self"]],["usize"]]],[11,"derive_key","","",12,N],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["xsalsa20poly1305"]]],[11,"default","","",13,[[],["xsalsa20poly1305"]]],[11,"seal","","",13,N],[11,"open","","",13,N],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"add_ciphers_and_kdfs","","",14,[[["eraser"]]]],[8,"Mac","pwbox","Message authentication code.",N,N],[18,"KEY_LEN","","Byte size of a MAC key.",15,N],[18,"MAC_LEN","","Byte size of the MAC output.",15,N],[10,"digest","","Digests a message under the specified key.",15,N],[8,"UnauthenticatedCipher","","Symmetric cipher without built-in authentication.",N,N],[18,"KEY_LEN","","Byte size of a key for this cipher.",16,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, IV) for this cipher.",16,N],[10,"seal_or_open","","Encrypts or decrypts `message` in place, given the `nonce` and `key`.",16,N],[8,"Suite","","Cryptographic suite providing ciphers and KDFs for password-based encryption.",N,N],[16,"Cipher","","Recommended cipher for this suite.",17,N],[16,"DeriveKey","","Recommended KDF for this suite.",17,N],[11,"build_box","","Initializes a `PwBoxBuilder` with the recommended cipher and KDF.",17,[[["r"]],["pwboxbuilder"]]],[10,"add_ciphers_and_kdfs","","Adds ciphers and KDFs from this suite into the specified `Eraser`.",17,[[["eraser"]]]],[8,"Cipher","","Authenticated symmetric cipher.",N,N],[18,"KEY_LEN","","Byte size of a key.",18,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, or IV).",18,N],[18,"MAC_LEN","","Byte size of a message authentication code (MAC).",18,N],[10,"seal","","Encrypts `message` with the provided `key` and `nonce`.",18,N],[10,"open","","Decrypts `encrypted` message with the provided `key` and `nonce` and stores the result into `output`. If the MAC does not verify, returns an error.",18,N],[8,"DeriveKey","","Key derivation function (KDF).",N,N],[10,"salt_len","","Returns byte size of salt supplied to the KDF.",19,[[["self"]],["usize"]]],[10,"derive_key","","Derives a key from the given password and salt.",19,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new box by using default settings of the supplied KDF.",20,N],[11,"len","","Returns the byte size of the encrypted data stored in this box.",20,[[["self"]],["usize"]]],[11,"open_into","","Decrypts the box into the specified container.",20,N],[11,"open","","Decrypts the box and returns its contents. The returned container is zeroed on drop and derefs to a byte slice.",20,N],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"len","","Returns the byte size of the encrypted data stored in this box.",21,[[["self"]],["usize"]]],[11,"open_into","","Decrypts the box into the specified container.",21,N],[11,"open","","Decrypts the box and returns its contents. The returned container is zeroed on drop and derefs to a byte slice.",21,N],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"new","","Initializes the builder with a random number generator.",22,[[["r"]],["self"]]],[11,"kdf","","Sets up a custom KDF.",22,[[["self"],["k"]],["self"]]],[11,"seal","","Creates a new `PwBox` with the specified password and contents.",22,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"clear","","",5,N],[11,"initialize","","",5,N],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[18,"KEY_LEN","","Byte size of a key for this cipher.",16,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, IV) for this cipher.",16,N],[18,"KEY_LEN","","Byte size of a MAC key.",15,N],[18,"MAC_LEN","","Byte size of the MAC output.",15,N],[11,"build_box","","Initializes a `PwBoxBuilder` with the recommended cipher and KDF.",17,[[["r"]],["pwboxbuilder"]]],[18,"KEY_LEN","","Byte size of a key.",18,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, or IV).",18,N],[18,"MAC_LEN","","Byte size of a message authentication code (MAC).",18,N],[11,"to_owned","pwbox::rcrypto","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"clear","","",9,N],[11,"initialize","","",9,N],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"clear","","",10,N],[11,"initialize","","",10,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","pwbox::sodium","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"clear","","",12,N],[11,"initialize","","",12,N],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"clear","","",13,N],[11,"initialize","","",13,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]]],"paths":[[3,"CipherOutput"],[4,"EraseError"],[4,"Error"],[3,"CipherWithMac"],[3,"ErasedPwBox"],[3,"Eraser"],[3,"SensitiveData"],[4,"Aes128Ctr"],[4,"Keccak256"],[3,"Scrypt"],[3,"Aes128Gcm"],[4,"RustCrypto"],[3,"Scrypt"],[3,"XSalsa20Poly1305"],[4,"Sodium"],[8,"Mac"],[8,"UnauthenticatedCipher"],[8,"Suite"],[8,"Cipher"],[8,"DeriveKey"],[3,"PwBox"],[3,"RestoredPwBox"],[3,"PwBoxBuilder"]]};
initSearch(searchIndex);
